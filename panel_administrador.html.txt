<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Panel de Administración de Solicitudes</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Inter', sans-serif;
        }
        /* Estilos para el estado de la solicitud */
        .status-pendiente {
            color: #d97706; /* Color ámbar */
            background-color: #fffbeb;
        }
        .status-aprobado {
            color: #10b981; /* Color verde */
            background-color: #ecfdf5;
        }
        .status-rechazado {
            color: #ef4444; /* Color rojo */
            background-color: #fef2f2;
        }
        /* Estilos del modal */
        .modal {
            background-color: rgba(0, 0, 0, 0.5);
        }
    </style>
</head>
<body class="bg-gray-100 p-4 sm:p-6 lg:p-8">

    <div class="w-full max-w-7xl mx-auto">
        <div class="flex items-center mb-8">
            <h1 class="text-2xl sm:text-3xl font-bold text-gray-800">Panel de Administración de Solicitudes</h1>
        </div>

        <!-- Mensajes de estado -->
        <div id="loadingMessage" class="flex items-center justify-center p-4 bg-blue-100 text-blue-700 rounded-lg shadow-md mb-6">
            <svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-blue-500" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
            </svg>
            <span>Cargando solicitudes...</span>
        </div>
        
        <!-- Tabla de solicitudes -->
        <div class="bg-white rounded-xl shadow-lg overflow-hidden">
            <div class="overflow-x-auto">
                <table class="min-w-full divide-y divide-gray-200">
                    <thead class="bg-gray-50">
                        <tr>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Artículo / Servicio</th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Tipo</th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Solicitante</th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Fecha de Solicitud</th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Estado</th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Acciones</th>
                        </tr>
                    </thead>
                    <tbody id="requestsTableBody" class="bg-white divide-y divide-gray-200">
                        <!-- Las filas se insertarán aquí dinámicamente -->
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    
    <!-- Modal para el detalle y la aprobación de la solicitud -->
    <div id="requestModal" class="fixed inset-0 z-50 overflow-y-auto hidden modal">
        <div class="flex items-center justify-center min-h-screen p-4">
            <div class="bg-white rounded-lg shadow-xl w-full max-w-2xl p-6 relative">
                <button onclick="closeModal()" class="absolute top-4 right-4 text-gray-400 hover:text-gray-600">&times;</button>
                <h2 class="text-xl font-bold text-gray-800 mb-4" id="modalTitle">Detalles de la Solicitud</h2>

                <div id="modalContent" class="space-y-4 text-sm text-gray-600">
                    <!-- Los detalles de la solicitud se insertarán aquí -->
                </div>

                <div class="mt-6 border-t pt-4">
                    <h3 class="text-md font-bold text-gray-700 mb-3">Uso Exclusivo de Finanzas</h3>
                    <form id="finanzasForm" class="space-y-4">
                        <div>
                            <label for="codigo_asignado" class="block text-sm font-medium text-gray-600 mb-1">Código asignado</label>
                            <input type="text" id="codigo_asignado" class="w-full px-3 py-2 border border-gray-300 rounded-md">
                        </div>
                        <div>
                            <label for="nombre_responsable" class="block text-sm font-medium text-gray-600 mb-1">Nombre del responsable</label>
                            <input type="text" id="nombre_responsable" class="w-full px-3 py-2 border border-gray-300 rounded-md">
                        </div>
                        <div class="flex justify-end space-x-2 pt-4">
                            <button type="button" onclick="closeModal()" class="px-4 py-2 text-sm text-gray-600 rounded-md hover:bg-gray-200">Cancelar</button>
                            <button type="submit" id="approveBtn" class="px-4 py-2 text-sm text-white bg-blue-600 rounded-md hover:bg-blue-700">Aprobar Solicitud</button>
                        </div>
                    </form>
                </div>
                
                <div class="mt-4 text-right">
                    <button type="button" onclick="rejectRequest()" class="px-4 py-2 text-sm text-white bg-red-600 rounded-md hover:bg-red-700">Rechazar Solicitud</button>
                </div>
            </div>
        </div>
    </div>

    <!-- CÓDIGO PARA LA CONEXIÓN A LA BASE DE DATOS Y RENDERIZAR LA TABLA -->
    <script type="module">
        import { initializeApp } from "https://www.gstatic.com/firebasejs/11.6.1/firebase-app.js";
        import { getAuth, signInAnonymously, signInWithCustomToken } from "https://www.gstatic.com/firebasejs/11.6.1/firebase-auth.js";
        import { getFirestore, collection, query, onSnapshot, updateDoc, doc, setLogLevel } from "https://www.gstatic.com/firebasejs/11.6.1/firebase-firestore.js";

        // Configuración de Firebase y Autenticación
        // NOTA: Estas variables globales se proporcionan automáticamente en este entorno
        const firebaseConfig = JSON.parse(typeof __firebase_config !== 'undefined' ? __firebase_config : '{}');
        const initialAuthToken = typeof __initial_auth_token !== 'undefined' ? __initial_auth_token : null;
        const appId = typeof __app_id !== 'undefined' ? __app_id : 'default-app-id';

        const app = initializeApp(firebaseConfig);
        const db = getFirestore(app);
        const auth = getAuth(app);
        setLogLevel('debug'); // Habilitar logs para depuración

        // Variables para el documento seleccionado y el ID del usuario
        let selectedDocId = null;
        let currentUserId = null;
        
        // La ruta de la colección ahora es pública para que todos los usuarios puedan ver las solicitudes
        const collectionPath = `/artifacts/${appId}/public/data/solicitudes_articulo`;

        // Referencias a los elementos del DOM
        const tableBody = document.getElementById('requestsTableBody');
        const loadingMessage = document.getElementById('loadingMessage');
        const modal = document.getElementById('requestModal');
        const modalTitle = document.getElementById('modalTitle');
        const modalContent = document.getElementById('modalContent');
        const finanzasForm = document.getElementById('finanzasForm');
        
        // --- Funciones para el Modal y las Acciones ---
        window.openModal = (docId) => {
            selectedDocId = docId;
            const request = requests.find(req => req.id === docId);
            if (!request) {
                console.error("Documento no encontrado:", docId);
                return;
            }

            modalTitle.textContent = `Detalles de la Solicitud: ${request.articulo.nombre}`;
            modalContent.innerHTML = `
                <p><strong>Solicitante:</strong> ${request.solicitante.nombre} (${request.solicitante.puesto})</p>
                <p><strong>Tipo:</strong> ${request.articulo.tipo}</p>
                <p><strong>Fecha:</strong> ${request.timestamp?.toDate ? request.timestamp.toDate().toLocaleDateString() : 'N/A'}</p>
                <p><strong>Unidad de Medida:</strong> ${request.articulo.unidad_medida}</p>
                <p><strong>Bodega:</strong> ${request.articulo.bodegas}</p>
                <p><strong>Impuesto:</strong> ${request.articulo.tipo_impuesto}</p>
                <p><strong>Vida Útil:</strong> ${request.articulo.vida_util_anios ? request.articulo.vida_util_anios + ' años' : 'N/A'}</p>
                <p><strong>Manejo por Lotes:</strong> ${request.articulo.manejo_lotes}</p>
                <p><strong>Origen:</strong> ${request.articulo.origen}</p>
                ${request.articulo.detalles_producto && request.articulo.detalles_producto.marca ? `
                    <h4 class="font-bold mt-4">Detalles del Producto:</h4>
                    <p><strong>Marca:</strong> ${request.articulo.detalles_producto.marca}</p>
                    <p><strong>Sabor:</strong> ${request.articulo.detalles_producto.sabor}</p>
                    <p><strong>Gramaje:</strong> ${request.articulo.detalles_producto.gramaje}</p>
                    <p><strong>Cliente:</strong> ${request.articulo.detalles_producto.cliente}</p>
                ` : ''}
                <p><strong>Observaciones:</strong> ${request.articulo.observaciones || 'N/A'}</p>
            `;
            
            // Restablecer el formulario de finanzas
            finanzasForm.reset();
            // Llenar el nombre del responsable con el usuario actual si está disponible
            document.getElementById('nombre_responsable').value = auth.currentUser?.email || auth.currentUser?.uid || '';
            
            modal.classList.remove('hidden');
        };

        window.closeModal = () => {
            modal.classList.add('hidden');
            selectedDocId = null;
        };

        window.rejectRequest = async () => {
            if (!selectedDocId) return;

            const docRef = doc(db, collectionPath, selectedDocId);
            try {
                await updateDoc(docRef, { status: 'Rechazado' });
                closeModal();
            } catch (error) {
                console.error("Error al rechazar la solicitud: ", error);
            }
        };

        finanzasForm.addEventListener('submit', async (e) => {
            e.preventDefault();
            if (!selectedDocId) return;

            const codigoAsignado = document.getElementById('codigo_asignado').value;
            const nombreResponsable = document.getElementById('nombre_responsable').value;

            const docRef = doc(db, collectionPath, selectedDocId);
            try {
                await updateDoc(docRef, {
                    status: 'Aprobado',
                    finanzas: {
                        codigo_asignado: codigoAsignado,
                        nombre_responsable: nombreResponsable,
                        fecha_creacion: new Date()
                    }
                });
                closeModal();
            } catch (error) {
                console.error("Error al aprobar la solicitud: ", error);
            }
        });

        // --- Suscribirse a los cambios en la base de datos ---
        let requests = [];
        async function setupRealtimeListener() {
            try {
                const q = query(collection(db, collectionPath));
                
                loadingMessage.classList.remove('hidden');
                
                onSnapshot(q, (snapshot) => {
                    requests = [];
                    snapshot.forEach(doc => {
                        requests.push({ id: doc.id, ...doc.data() });
                    });
                    renderRequests(requests);
                    loadingMessage.classList.add('hidden');
                }, (error) => {
                    console.error("Error al escuchar cambios: ", error);
                    loadingMessage.textContent = 'Error al cargar las solicitudes.';
                    loadingMessage.className = 'p-4 bg-red-100 text-red-700 rounded-lg shadow-md mb-6';
                });
            } catch (error) {
                console.error("Error al configurar el listener: ", error);
            }
        }

        // --- Renderizar las solicitudes en la tabla ---
        function renderRequests(requests) {
            tableBody.innerHTML = '';
            
            if (requests.length === 0) {
                tableBody.innerHTML = `<tr><td colspan="6" class="px-6 py-4 text-center text-gray-500">No hay solicitudes para mostrar.</td></tr>`;
                return;
            }

            requests.forEach(request => {
                const row = document.createElement('tr');
                const statusClass = `status-${request.status.toLowerCase().replace(/á/g, 'a').replace(/é/g, 'e').replace(/\s/g, '')}`;
                const fecha = request.timestamp?.toDate ? request.timestamp.toDate().toLocaleDateString() : 'N/A';

                row.innerHTML = `
                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">${request.articulo.nombre}</td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">${request.articulo.tipo}</td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">${request.solicitante.nombre}</td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">${fecha}</td>
                    <td class="px-6 py-4 whitespace-nowrap">
                        <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${statusClass}">
                            ${request.status}
                        </span>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                        <button onclick="openModal('${request.id}')" class="text-blue-600 hover:text-blue-900">Ver Detalles</button>
                    </td>
                `;
                tableBody.appendChild(row);
            });
        }

        // --- Iniciar autenticación y el listener ---
        async function initApp() {
            try {
                if (initialAuthToken) {
                    await signInWithCustomToken(auth, initialAuthToken);
                } else {
                    await signInAnonymously(auth);
                }
                currentUserId = auth.currentUser?.uid;
                setupRealtimeListener();
            } catch (error) {
                console.error("Error al autenticar:", error);
                loadingMessage.textContent = 'Error de autenticación. No se pueden cargar las solicitudes.';
                loadingMessage.className = 'p-4 bg-red-100 text-red-700 rounded-lg shadow-md mb-6';
            }
        }
        
        initApp();

    </script>
</body>
</html>